// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: journal.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Journal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImpactFactor  float64                `protobuf:"fixed64,4,opt,name=impact_factor,json=impactFactor,proto3" json:"impact_factor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Journal) Reset() {
	*x = Journal{}
	mi := &file_journal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Journal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Journal) ProtoMessage() {}

func (x *Journal) ProtoReflect() protoreflect.Message {
	mi := &file_journal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Journal.ProtoReflect.Descriptor instead.
func (*Journal) Descriptor() ([]byte, []int) {
	return file_journal_proto_rawDescGZIP(), []int{0}
}

func (x *Journal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Journal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Journal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Journal) GetImpactFactor() float64 {
	if x != nil {
		return x.ImpactFactor
	}
	return 0
}

type GetJournalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJournalRequest) Reset() {
	*x = GetJournalRequest{}
	mi := &file_journal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJournalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournalRequest) ProtoMessage() {}

func (x *GetJournalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_journal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournalRequest.ProtoReflect.Descriptor instead.
func (*GetJournalRequest) Descriptor() ([]byte, []int) {
	return file_journal_proto_rawDescGZIP(), []int{1}
}

func (x *GetJournalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetJournalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Journal       *Journal               `protobuf:"bytes,1,opt,name=journal,proto3" json:"journal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJournalResponse) Reset() {
	*x = GetJournalResponse{}
	mi := &file_journal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJournalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournalResponse) ProtoMessage() {}

func (x *GetJournalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_journal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournalResponse.ProtoReflect.Descriptor instead.
func (*GetJournalResponse) Descriptor() ([]byte, []int) {
	return file_journal_proto_rawDescGZIP(), []int{2}
}

func (x *GetJournalResponse) GetJournal() *Journal {
	if x != nil {
		return x.Journal
	}
	return nil
}

var File_journal_proto protoreflect.FileDescriptor

const file_journal_proto_rawDesc = "" +
	"\n" +
	"\rjournal.proto\x12\ajournal\"t\n" +
	"\aJournal\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12#\n" +
	"\rimpact_factor\x18\x04 \x01(\x01R\fimpactFactor\"#\n" +
	"\x11GetJournalRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"@\n" +
	"\x12GetJournalResponse\x12*\n" +
	"\ajournal\x18\x01 \x01(\v2\x10.journal.JournalR\ajournal2W\n" +
	"\x0eJournalService\x12E\n" +
	"\n" +
	"GetJournal\x12\x1a.journal.GetJournalRequest\x1a\x1b.journal.GetJournalResponseB\tZ\a./protob\x06proto3"

var (
	file_journal_proto_rawDescOnce sync.Once
	file_journal_proto_rawDescData []byte
)

func file_journal_proto_rawDescGZIP() []byte {
	file_journal_proto_rawDescOnce.Do(func() {
		file_journal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_journal_proto_rawDesc), len(file_journal_proto_rawDesc)))
	})
	return file_journal_proto_rawDescData
}

var file_journal_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_journal_proto_goTypes = []any{
	(*Journal)(nil),            // 0: journal.Journal
	(*GetJournalRequest)(nil),  // 1: journal.GetJournalRequest
	(*GetJournalResponse)(nil), // 2: journal.GetJournalResponse
}
var file_journal_proto_depIdxs = []int32{
	0, // 0: journal.GetJournalResponse.journal:type_name -> journal.Journal
	1, // 1: journal.JournalService.GetJournal:input_type -> journal.GetJournalRequest
	2, // 2: journal.JournalService.GetJournal:output_type -> journal.GetJournalResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_journal_proto_init() }
func file_journal_proto_init() {
	if File_journal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_journal_proto_rawDesc), len(file_journal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_journal_proto_goTypes,
		DependencyIndexes: file_journal_proto_depIdxs,
		MessageInfos:      file_journal_proto_msgTypes,
	}.Build()
	File_journal_proto = out.File
	file_journal_proto_goTypes = nil
	file_journal_proto_depIdxs = nil
}
